{
    "openapi": "3.0.0",
    "info": {
        "description": "Billing Data Service's API",
        "version": "1.0.0",
        "title": "Billing Data Service"
    },
    "servers": [
        {
            "url": "http://localhost:8094"
        }
    ],
    "tags": [
        {
            "name": "BillingDataServiceClient",
            "description": "getPrices\ngetNodeTypes\ngetAccounts\n"
        }
    ],
    "paths": {
        "/billing/v1/price/": {
            "get": {
                "tags": [
                    "PriceServiceClient"
                ],
                "description": "Get a collection of all standard prices.",
                "operationId": "getPrices",
                "parameters": [
                    {
                        "name": "meterFrom",
                        "in": "query",
                        "description": "start time to retrieve prices from",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "meterTo",
                        "in": "query",
                        "description": "end time to retrieve prices to",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Prices retrieved",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "$ref": "#/components/schemas/Prices"
                                }
                            }
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_PORT => \"8094\",\n  CURLOPT_URL => \"http://localhost:8094/billing/v1/price/?meterFrom=SOME_STRING_VALUE&meterTo=SOME_STRING_VALUE\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "Javascript + Xhr",
                        "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"http://localhost:8094/billing/v1/price/?meterFrom=SOME_STRING_VALUE&meterTo=SOME_STRING_VALUE\");\n\nxhr.send(data);"
                    },
                    {
                        "lang": "Java + Okhttp",
                        "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://localhost:8094/billing/v1/price/?meterFrom=SOME_STRING_VALUE&meterTo=SOME_STRING_VALUE\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();"
                    },
                    {
                        "lang": "Python + Requests",
                        "source": "import requests\n\nurl = \"http://localhost:8094/billing/v1/price/\"\n\nquerystring = {\"meterFrom\":\"SOME_STRING_VALUE\",\"meterTo\":\"SOME_STRING_VALUE\"}\n\nresponse = requests.request(\"GET\", url, params=querystring)\n\nprint(response.text)"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"localhost:8094\")\n\nconn.request(\"GET\", \"/billing/v1/price/?meterFrom=SOME_STRING_VALUE&meterTo=SOME_STRING_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Go + Native",
                        "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"http://localhost:8094/billing/v1/price/?meterFrom=SOME_STRING_VALUE&meterTo=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request GET \\\n  --url 'http://localhost:8094/billing/v1/price/?meterFrom=SOME_STRING_VALUE&meterTo=SOME_STRING_VALUE'"
                    }
                ]
            }
        },
        "/billing/v1/nodeType/": {
            "get": {
                "tags": [
                    "NodeTypeServiceClient"
                ],
                "description": "Get all node types in the DB",
                "operationId": "getNodeTypes",
                "responses": {
                    "200": {
                        "description": "nodeTypes found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/NodeType"
                                    }
                                }
                            }
                        }
                    }
                },
                "x-code-samples": [
                    {
                        "lang": "Php + Curl",
                        "source": "<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_PORT => \"8094\",\n  CURLOPT_URL => \"http://localhost:8094/billing/v1/nodeType/\",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => \"\",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => \"GET\",\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo \"cURL Error #:\" . $err;\n} else {\n  echo $response;\n}"
                    },
                    {
                        "lang": "Javascript + Xhr",
                        "source": "var data = null;\n\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n\nxhr.addEventListener(\"readystatechange\", function () {\n  if (this.readyState === this.DONE) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"GET\", \"http://localhost:8094/billing/v1/nodeType/\");\n\nxhr.send(data);"
                    },
                    {
                        "lang": "Java + Okhttp",
                        "source": "OkHttpClient client = new OkHttpClient();\n\nRequest request = new Request.Builder()\n  .url(\"http://localhost:8094/billing/v1/nodeType/\")\n  .get()\n  .build();\n\nResponse response = client.newCall(request).execute();"
                    },
                    {
                        "lang": "Python + Requests",
                        "source": "import requests\n\nurl = \"http://localhost:8094/billing/v1/nodeType/\"\n\nresponse = requests.request(\"GET\", url)\n\nprint(response.text)"
                    },
                    {
                        "lang": "Python + Python3",
                        "source": "import http.client\n\nconn = http.client.HTTPConnection(\"localhost:8094\")\n\nconn.request(\"GET\", \"/billing/v1/nodeType/\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
                    },
                    {
                        "lang": "Go + Native",
                        "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"http://localhost:8094/billing/v1/nodeType/\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
                    },
                    {
                        "lang": "Shell + Curl",
                        "source": "curl --request GET \\\n  --url http://localhost:8094/billing/v1/nodeType/"
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Prices": {
                "type": "object",
                "properties": {
                    "addOnRates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AddonRate"
                        }
                    },
                    "nodePrices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NodePrice"
                        }
                    },
                    "riyoaNodeManagementUnits": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RiyoaNodeManagementUnit"
                        }
                    },
                    "riyoaTieredUnitRates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RiyoaTieredUnitRate"
                        }
                    }
                }
            },
            "RiyoaNodeManagementUnit": {
                "type": "object",
                "required": [
                    "nodeType",
                    "managementUnits",
                    "primaryBundle",
                    "slaTier"
                ],
                "properties": {
                    "nodeType": {
                        "$ref": "#/components/schemas/NodeType"
                    },
                    "managementUnits": {
                        "type": "number",
                        "format": "double"
                    },
                    "primaryBundle": {
                        "$ref": "#/components/schemas/PrimaryBundle"
                    },
                    "slaTier": {
                        "$ref": "../../../../common/src/main/resources/openapi/common-openapi-spec.yaml#/components/schemas/ServiceLevelAgreementTier"
                    }
                }
            },
            "RiyoaTieredUnitRate": {
                "type": "object",
                "required": [
                    "fromUnits",
                    "unitRate"
                ],
                "properties": {
                    "fromUnits": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "toUnits": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "unitRate": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "NodePrice": {
                "type": "object",
                "required": [
                    "nodeType"
                ],
                "properties": {
                    "nodeType": {
                        "$ref": "#/components/schemas/NodeType"
                    },
                    "monthlyPrice": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "monthlyCost": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "includedNodeMonth": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "NodeType": {
                "type": "object",
                "required": [
                    "name",
                    "provider",
                    "dataCentre"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "format": "string"
                    },
                    "provider": {
                        "$ref": "../../../../common/src/main/resources/openapi/common-openapi-spec.yaml#/components/schemas/Provider"
                    },
                    "dataCentre": {
                        "type": "string",
                        "format": "string"
                    }
                }
            },
            "AddonRate": {
                "type": "object",
                "required": [
                    "addonType",
                    "upliftRate"
                ],
                "properties": {
                    "addonType": {
                        "$ref": "../../../../common/src/main/resources/openapi/common-openapi-spec.yaml#/components/schemas/AddonType"
                    },
                    "upliftRate": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "PrimaryBundle": {
                "type": "string",
                "enum": [
                    "CASSANDRA",
                    "KAFKA"
                ]
            }
        }
    }
}